/* eslint-disable */

/*
 * Identifier Rules
 * Spec: https://tc39.es/ecma262/#sec-names-and-keywords
 */
export const isIdentifierPart = (n: number): boolean => {
  switch (true) {
    case n === 36:
      return true;
    case n >= 48 && n <= 57:
      return true;
    case n >= 65 && n <= 90:
      return true;
    case n === 95:
      return true;
    case n >= 97 && n <= 122:
      return true;
    default:
      return false;
  }
};

export const enum CharSymbol {
  None = 0,
  IdentifierStart       = 1 << 0,
  IdentifierPart        = 1 << 1,
  KeywordCandidate      = 1 << 2,
  LineTerminator        = 1 << 3, // https://tc39.es/ecma262/#sec-line-terminators
  Decimal               = 1 << 4,
  Octal                 = 1 << 5,
  Hex                   = 1 << 6,
  Binary                = 1 << 7,
  Exponent              = 1 << 8,
  ImplicitOctalDigits   = 1 << 9,
  CarriageReturn        = 1 << 10,
  LineFeed              = 1 << 11,
  Underscore            = 1 << 12,
  StringLiteral         = 1 << 13,
  JSXToken              = 1 << 14,
  Hyphen                = 1 << 15,
  binOctHex             = 1 << 16,
}

export const CharTypes = [
  CharSymbol.None /* 0x00   */,
  CharSymbol.None /* 0x01   */,
  CharSymbol.None /* 0x02   */,
  CharSymbol.None /* 0x03   */,
  CharSymbol.None /* 0x04   */,
  CharSymbol.None /* 0x05   */,
  CharSymbol.None /* 0x06   */,
  CharSymbol.None /* 0x07   */,
  CharSymbol.None /* 0x08   */,
  CharSymbol.None /* 0x09   */,
  CharSymbol.LineTerminator /* 0x0A   */,
  CharSymbol.None /* 0x0B   */,
  CharSymbol.None /* 0x0C   */,
  CharSymbol.LineTerminator /* 0x0D   */,
  CharSymbol.None /* 0x0E   */,
  CharSymbol.None /* 0x0F   */,
  CharSymbol.None /* 0x10   */,
  CharSymbol.None /* 0x11   */,
  CharSymbol.None /* 0x12   */,
  CharSymbol.None /* 0x13   */,
  CharSymbol.None /* 0x14   */,
  CharSymbol.None /* 0x15   */,
  CharSymbol.None /* 0x16   */,
  CharSymbol.None /* 0x17   */,
  CharSymbol.None /* 0x18   */,
  CharSymbol.None /* 0x19   */,
  CharSymbol.None /* 0x1A   */,
  CharSymbol.None /* 0x1B   */,
  CharSymbol.None /* 0x1C   */,
  CharSymbol.None /* 0x1D   */,
  CharSymbol.None /* 0x1E   */,
  CharSymbol.None /* 0x1F   */,
  CharSymbol.None /* 0x20   */,
  CharSymbol.None /* 0x21 ! */,
  CharSymbol.StringLiteral /* 0x22   */,
  CharSymbol.None /* 0x23 # */,
  CharSymbol.IdentifierStart | CharSymbol.IdentifierPart /* 0x24 $ */,
  CharSymbol.None /* 0x25 % */,
  CharSymbol.None /* 0x26 & */,
  CharSymbol.StringLiteral /* 0x27   */,
  CharSymbol.None /* 0x28   */,
  CharSymbol.None /* 0x29   */,
  CharSymbol.None /* 0x2A   */,
  CharSymbol.Exponent /* 0x2B   */,
  CharSymbol.None /* 0x2C   */,
  CharSymbol.Exponent | CharSymbol.Hyphen /* 0x2D   */,
  CharSymbol.None /* 0x2E   */,
  CharSymbol.None /* 0x2F   */,
  CharSymbol.IdentifierPart | CharSymbol.Decimal | CharSymbol.Octal | CharSymbol.Hex | CharSymbol.Binary /* 0x30 0 */,
  CharSymbol.IdentifierPart | CharSymbol.Decimal | CharSymbol.Octal | CharSymbol.Hex | CharSymbol.Binary /* 0x31 1 */,
  CharSymbol.IdentifierPart | CharSymbol.Decimal | CharSymbol.Octal | CharSymbol.Hex /* 0x32 2 */,
  CharSymbol.IdentifierPart | CharSymbol.Decimal | CharSymbol.Octal | CharSymbol.Hex /* 0x33 3 */,
  CharSymbol.IdentifierPart | CharSymbol.Decimal | CharSymbol.Octal | CharSymbol.Hex /* 0x34 4 */,
  CharSymbol.IdentifierPart | CharSymbol.Decimal | CharSymbol.Octal | CharSymbol.Hex /* 0x35 5 */,
  CharSymbol.IdentifierPart | CharSymbol.Decimal | CharSymbol.Octal | CharSymbol.Hex /* 0x36 6 */,
  CharSymbol.IdentifierPart | CharSymbol.Decimal | CharSymbol.Octal | CharSymbol.Hex /* 0x37 7 */,
  CharSymbol.IdentifierPart | CharSymbol.Decimal | CharSymbol.ImplicitOctalDigits | CharSymbol.Hex /* 0x38 8 */,
  CharSymbol.IdentifierPart | CharSymbol.Decimal | CharSymbol.ImplicitOctalDigits | CharSymbol.Hex /* 0x39 9 */,
  CharSymbol.None /* 0x3A   */,
  CharSymbol.None /* 0x3B   */,
  CharSymbol.JSXToken /* 0x3C < */,
  CharSymbol.None /* 0x3D = */,
  CharSymbol.None /* 0x3E > */,
  CharSymbol.None /* 0x3F   */,
  CharSymbol.None /* 0x40 @ */,
  CharSymbol.IdentifierStart | CharSymbol.IdentifierPart | CharSymbol.Hex /* 0x41 A */,
  CharSymbol.IdentifierStart | CharSymbol.IdentifierPart | CharSymbol.Hex | CharSymbol.binOctHex /* 0x42 B */,
  CharSymbol.IdentifierStart | CharSymbol.IdentifierPart | CharSymbol.Hex /* 0x43 C */,
  CharSymbol.IdentifierStart | CharSymbol.IdentifierPart | CharSymbol.Hex /* 0x44 D */,
  CharSymbol.IdentifierStart | CharSymbol.IdentifierPart | CharSymbol.Hex /* 0x45 E */,
  CharSymbol.IdentifierStart | CharSymbol.IdentifierPart | CharSymbol.Hex /* 0x46 F */,
  CharSymbol.IdentifierStart | CharSymbol.IdentifierPart /* 0x47 G */,
  CharSymbol.IdentifierStart | CharSymbol.IdentifierPart /* 0x48 H */,
  CharSymbol.IdentifierStart | CharSymbol.IdentifierPart /* 0x49 I */,
  CharSymbol.IdentifierStart | CharSymbol.IdentifierPart /* 0x4A J */,
  CharSymbol.IdentifierStart | CharSymbol.IdentifierPart /* 0x4B K */,
  CharSymbol.IdentifierStart | CharSymbol.IdentifierPart /* 0x4C L */,
  CharSymbol.IdentifierStart | CharSymbol.IdentifierPart /* 0x4D M */,
  CharSymbol.IdentifierStart | CharSymbol.IdentifierPart /* 0x4E N */,
  CharSymbol.IdentifierStart | CharSymbol.IdentifierPart | CharSymbol.binOctHex /* 0x4F O */,
  CharSymbol.IdentifierStart | CharSymbol.IdentifierPart /* 0x50 P */,
  CharSymbol.IdentifierStart | CharSymbol.IdentifierPart /* 0x51 Q */,
  CharSymbol.IdentifierStart | CharSymbol.IdentifierPart /* 0x52 R */,
  CharSymbol.IdentifierStart | CharSymbol.IdentifierPart /* 0x53 S */,
  CharSymbol.IdentifierStart | CharSymbol.IdentifierPart /* 0x54 T */,
  CharSymbol.IdentifierStart | CharSymbol.IdentifierPart /* 0x55 U */,
  CharSymbol.IdentifierStart | CharSymbol.IdentifierPart /* 0x56 V */,
  CharSymbol.IdentifierStart | CharSymbol.IdentifierPart /* 0x57 W */,
  CharSymbol.IdentifierStart | CharSymbol.IdentifierPart | CharSymbol.binOctHex /* 0x58 X */,
  CharSymbol.IdentifierStart | CharSymbol.IdentifierPart /* 0x59 Y */,
  CharSymbol.IdentifierStart | CharSymbol.IdentifierPart /* 0x5A Z */,
  CharSymbol.None /* 0x5B   */,
  CharSymbol.IdentifierStart /* 0x5C   */,
  CharSymbol.None /* 0x5D   */,
  CharSymbol.None /* 0x5E   */,
  CharSymbol.IdentifierStart | CharSymbol.IdentifierPart | CharSymbol.Underscore/* 0x5F _ */,
  CharSymbol.None /* 0x60   */,
  CharSymbol.IdentifierStart | CharSymbol.IdentifierPart | CharSymbol.KeywordCandidate | CharSymbol.Hex /* 0x61 a */,
  CharSymbol.IdentifierStart | CharSymbol.IdentifierPart | CharSymbol.KeywordCandidate | CharSymbol.Hex | CharSymbol.binOctHex /* 0x62 b */,
  CharSymbol.IdentifierStart | CharSymbol.IdentifierPart | CharSymbol.KeywordCandidate | CharSymbol.Hex /* 0x63 c */,
  CharSymbol.IdentifierStart | CharSymbol.IdentifierPart | CharSymbol.KeywordCandidate | CharSymbol.Hex /* 0x64 d */,
  CharSymbol.IdentifierStart | CharSymbol.IdentifierPart | CharSymbol.KeywordCandidate | CharSymbol.Hex /* 0x65 e */,
  CharSymbol.IdentifierStart | CharSymbol.IdentifierPart | CharSymbol.KeywordCandidate | CharSymbol.Hex /* 0x66 f */,
  CharSymbol.IdentifierStart | CharSymbol.IdentifierPart | CharSymbol.KeywordCandidate /* 0x67 g */,
  CharSymbol.IdentifierStart | CharSymbol.IdentifierPart | CharSymbol.KeywordCandidate /* 0x68 h */,
  CharSymbol.IdentifierStart | CharSymbol.IdentifierPart | CharSymbol.KeywordCandidate /* 0x69 i */,
  CharSymbol.IdentifierStart | CharSymbol.IdentifierPart | CharSymbol.KeywordCandidate /* 0x6A j */,
  CharSymbol.IdentifierStart | CharSymbol.IdentifierPart | CharSymbol.KeywordCandidate /* 0x6B k */,
  CharSymbol.IdentifierStart | CharSymbol.IdentifierPart | CharSymbol.KeywordCandidate /* 0x6C l */,
  CharSymbol.IdentifierStart | CharSymbol.IdentifierPart | CharSymbol.KeywordCandidate /* 0x6D m */,
  CharSymbol.IdentifierStart | CharSymbol.IdentifierPart | CharSymbol.KeywordCandidate | CharSymbol.binOctHex /* 0x6E n */,
  CharSymbol.IdentifierStart | CharSymbol.IdentifierPart | CharSymbol.KeywordCandidate | CharSymbol.binOctHex /* 0x6F o */,
  CharSymbol.IdentifierStart | CharSymbol.IdentifierPart | CharSymbol.KeywordCandidate /* 0x70 p */,
  CharSymbol.IdentifierStart | CharSymbol.IdentifierPart | CharSymbol.KeywordCandidate /* 0x71 q */,
  CharSymbol.IdentifierStart | CharSymbol.IdentifierPart | CharSymbol.KeywordCandidate /* 0x72 r */,
  CharSymbol.IdentifierStart | CharSymbol.IdentifierPart | CharSymbol.KeywordCandidate /* 0x73 s */,
  CharSymbol.IdentifierStart | CharSymbol.IdentifierPart | CharSymbol.KeywordCandidate /* 0x74 t */,
  CharSymbol.IdentifierStart | CharSymbol.IdentifierPart | CharSymbol.KeywordCandidate /* 0x75 u */,
  CharSymbol.IdentifierStart | CharSymbol.IdentifierPart | CharSymbol.KeywordCandidate /* 0x76 v */,
  CharSymbol.IdentifierStart | CharSymbol.IdentifierPart | CharSymbol.KeywordCandidate /* 0x77 w */,
  CharSymbol.IdentifierStart | CharSymbol.IdentifierPart | CharSymbol.KeywordCandidate | CharSymbol.binOctHex /* 0x78 x */,
  CharSymbol.IdentifierStart | CharSymbol.IdentifierPart | CharSymbol.KeywordCandidate /* 0x79 y */,
  CharSymbol.IdentifierStart | CharSymbol.IdentifierPart | CharSymbol.KeywordCandidate /* 0x7A z */,
  CharSymbol.JSXToken /* 0x7B */,
  CharSymbol.None /* 0x7C */,
  CharSymbol.None /* 0x7D */,
  CharSymbol.None /* 0x7E */,
  CharSymbol.None /* 0x7F */
];

export enum Chars {

  Null = 0x00,

  Backspace      = 0x08,
  Tab            = 0x09,
  LineFeed       = 0x0A,
  VerticalTab    = 0x0B,
  FormFeed       = 0x0C,
  CarriageReturn = 0x0D,

  Space       = 0x20,
  Exclamation = 0x21,
  DoubleQuote = 0x22,
  Hash        = 0x23,
  Dollar      = 0x24,
  Percent     = 0x25,
  Ampersand   = 0x26,
  SingleQuote = 0x27,
  LeftParen   = 0x28,
  RightParen  = 0x29,
  Asterisk    = 0x2A,
  Plus        = 0x2B,
  Comma       = 0x2C,
  Hyphen      = 0x2D,
  Period      = 0x2E,
  Slash       = 0x2F,

  Zero         = 0x30,
  One          = 0x31,
  Two          = 0x32,
  Three        = 0x33,
  Four         = 0x34,
  Five         = 0x35,
  Six          = 0x36,
  Seven        = 0x37,
  Eight        = 0x38,
  Nine         = 0x39,
  Colon        = 0x3A,
  Semicolon    = 0x3B,
  LessThan     = 0x3C,
  EqualSign    = 0x3D,
  GreaterThan  = 0x3E,
  QuestionMark = 0x3F,

  UpperA = 0x41,
  UpperB = 0x42,
  UpperC = 0x43,
  UpperD = 0x44,
  UpperE = 0x45,
  UpperF = 0x46,
  UpperG = 0x47,
  UpperH = 0x48,
  UpperI = 0x49,
  UpperJ = 0x4A,
  UpperK = 0x4B,
  UpperL = 0x4C,
  UpperM = 0x4D,
  UpperN = 0x4E,
  UpperO = 0x4F,

  UpperP       = 0x50,
  UpperQ       = 0x51,
  UpperR       = 0x52,
  UpperS       = 0x53,
  UpperT       = 0x54,
  UpperU       = 0x55,
  UpperV       = 0x56,
  UpperW       = 0x57,
  UpperX       = 0x58,
  UpperY       = 0x59,
  UpperZ       = 0x5A,
  LeftBracket  = 0x5B,
  Backslash    = 0x5C,
  RightBracket = 0x5D,
  Caret        = 0x5E,
  Underscore   = 0x5F,

  Backtick = 0x60,
  LowerA   = 0x61,
  LowerB   = 0x62,
  LowerC   = 0x63,
  LowerD   = 0x64,
  LowerE   = 0x65,
  LowerF   = 0x66,
  LowerG   = 0x67,
  LowerH   = 0x68,
  LowerI   = 0x69,
  LowerJ   = 0x6A,
  LowerK   = 0x6B,
  LowerL   = 0x6C,
  LowerM   = 0x6D,
  LowerN   = 0x6E,
  LowerO   = 0x6F,

  LowerP      = 0x70,
  LowerQ      = 0x71,
  LowerR      = 0x72,
  LowerS      = 0x73,
  LowerT      = 0x74,
  LowerU      = 0x75,
  LowerV      = 0x76,
  LowerW      = 0x77,
  LowerX      = 0x78,
  LowerY      = 0x79,
  LowerZ      = 0x7A,
  LeftBrace   = 0x7B,
  VerticalBar = 0x7C,
  RightBrace  = 0x7D,
  Tilde       = 0x7E,
  Delete      = 0x7F,

  NextLine         = 0x85,
  NonBreakingSpace = 0xA0,

  Ogham = 0x1680,

  EnQuad             = 0x2000,
  EmQuad             = 0x2001,
  EnSpace            = 0x2002,
  EmSpace            = 0x2003,
  ThreePerEmSpace    = 0x2004,
  FourPerEmSpace     = 0x2005,
  SixPerEmSpace      = 0x2006,
  FigureSpace        = 0x2007,
  PunctuationSpace   = 0x2008,
  ThinSpace          = 0x2009,
  HairSpace          = 0x200A,
  ZeroWidthSpace     = 0x200B,
  ZeroWidthJoiner    = 0x200C,
  ZeroWidthNonJoiner = 0x200D,

  LineSeparator      = 0x2028,
  ParagraphSeparator = 0x2029,

  NarrowNoBreakSpace = 0x202F,
  MathematicalSpace  = 0x205F,
  IdeographicSpace   = 0x3000,

  ZeroWidthNoBreakSpace = 0xFEFF,

  ByteOrderMark = 0xFFEF,

  NonBMPMax = 0x10FFFF,

  LeadSurrogateMin = 0xD800,
  LeadSurrogateMax = 0xDBFF,
  TrailSurrogateMin = 0xDC00,
  TrailSurrogateMax = 0xDFFF,
  UTF16Max = 0xFFFF,
  NonBMPMin = 0x10000,
}